buildscript {

    repositories {
        //maven { url  'https://maven.aliyun.com/repository/public' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://maven.parchmentmc.org" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: 'org.spongepowered.mixin'


ext {
    modId = "flamereaction"
    projectId = "FlameReaction"
    githubRepo = "xkball/FlameReaction"
    artifactId = "FlameReacion-forge-1.18.2"
}

version = '0.1.1'
group = 'com.xkball.flamereaction' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'flamereaction'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    //mappings channel: 'official', version: '1.18.2'
    mappings channel: "parchment", version: "2022.03.13-1.18.2"
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property 'forge.enabledGameTestNamespaces', 'flamereaction'

            mods.create(project.modId) { it.source sourceSets.main }
//            mods {
//                flamereaction {
//                    source sourceSets.main
//                }
//            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property 'forge.enabledGameTestNamespaces', 'flamereaction'

            mods.create(project.modId) { it.source sourceSets.main }
//            mods {
//                flamereaction {
//                    source sourceSets.main
//                }
//            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            property 'forge.enabledGameTestNamespaces', 'flamereaction'

            mods.create(project.modId) { it.source sourceSets.main }

//            mods {
//                flamereaction {
//                    source sourceSets.main
//                }
//            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'info'

            args '--mod', 'flamereaction', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                flamereaction {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    'src/generated/resources'
            ]
        }
    }
    datagen {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
        resources {
            srcDirs = [
                    "$rootDir/src/datagen/resources",
            ]
        }
    }
}

repositories {
//    maven {
//        url  'https://maven.aliyun.com/repository/public'
//    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.68'

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}")
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, 'flamereaction.refmap.json'

    config 'mixins.flamereaction.json'

    debug.verbose = true
    debug.export = true
    dumpTargetOnFailure = true

    quiet
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.projectId,
                "Specification-Vendor"    : "xkball",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.projectId,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "xkball",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}


